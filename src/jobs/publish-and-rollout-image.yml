description: "Update cluster with new Docker image."
machine: true
parameters:
  cluster:
    description: "The Kubernetes cluster name."
    type: string
  deployment:
    description: "The Kubernetes deployment name."
    type: string
    default: ""
  namespace:
    description: "The Kubernetes namespace name."
    type: string
    default: "default"
  container:
    description: "The Kubernetes container name."
    type: string
  gcloud-service-key:
    description: The gcloud service key
    type: env_var_name
    default: GCLOUD_SERVICE_KEY
  google-project-id:
    description: The Google project ID to connect with via the gcloud CLI
    type: env_var_name
    default: GOOGLE_PROJECT_ID
  google-compute-zone:
    description: The Google compute zone to connect with via the gcloud CLI
    type: env_var_name
    default: GOOGLE_COMPUTE_ZONE
  registry-url:
    description: The GCR registry URL from ['', us, eu, asia].gcr.io
    type: string
    default: gcr.io
  image:
    description: A name for your docker image
    type: string
  tag:
    description: A docker image tag
    type: string
    default: "latest"
  stable-tag:
    description: A docker image tag added after a successful image rollout
    type: string
    default: "$CIRCLE_BRANCH.stable"
  cwd-path-for-build:
    description: The relative path from where docker will start the build of the image
    type: string
    default: "."
  dockerfile:
    description: Path and name of dockerfile to use
    type: string
    default: "Dockerfile"
  extra_build_args:
    type: string
    default: ""
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build
steps:
  - checkout-submodule
  - attach_workspace:
      at: ./
  - gcr/gcr-auth:
      google-project-id: <<parameters.google-project-id>>
      google-compute-zone: <<parameters.google-compute-zone>>
  - install
  - gcr/build-image:
      dockerfile: <<parameters.dockerfile>>
      registry-url: <<parameters.registry-url>>
      google-project-id: <<parameters.google-project-id>>
      image: <<parameters.image>>
      tag: << parameters.tag >>
      path: <<parameters.cwd-path-for-build>>
      extra_build_args: <<parameters.extra_build_args>>
  - gcr/push-image:
      registry-url: <<parameters.registry-url>>
      google-project-id: <<parameters.google-project-id>>
      image: <<parameters.image>>
      tag: <<parameters.tag>>
  - get-cluster-credentials:
      cluster: "<<parameters.cluster>>"
  - rollout-image:
      deployment: "<<parameters.deployment>>"
      namespace: "<<parameters.namespace>>"
      container: "<<parameters.container>>"
      image: "<<parameters.registry-url>>/$<<parameters.google-project-id>>/<<parameters.image>>:<<parameters.tag>>"
  - gcr/tag-image:
      registry-url: <<parameters.registry-url>>
      google-project-id: <<parameters.google-project-id>>
      image: <<parameters.image>>
      source-tag: <<parameters.tag>>
      target-tag: "<<parameters.stable-tag>>"
  - notify-datadog:
      image: "<<parameters.image>>:<<parameters.tag>>"
  - notify-sentry:
      version: "$CIRCLE_PROJECT_REPONAME:<<parameters.tag>>"
  - notify-slack:
      text: "Deployed *<<parameters.image>>:<<parameters.tag>>*

        <$CIRCLE_BUILD_URL|Build> by: <https://github.com/$CIRCLE_USERNAME|$CIRCLE_USERNAME>

        message: $GIT_COMMIT_DESC"
